{"ast":null,"code":"var _jsxFileName = \"/Users/Bemnet/BlogApp/frontend/src/components/homepage/FormStepper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport BasicInfoForm from './BasicInfoForm';\nimport UserPassForm from './UserPassForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Basic', 'Profile Info'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BasicInfoForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(UserPassForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function FormStepper() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    var userINputs = document.querySelectorAll('input');\n\n    for (var x = 0; x < userINputs.length; x++) {\n      if (userINputs[x] === '') {\n        userINputs[x].style.border = 'red';\n        setTimeout(() => {\n          userINputs[x].style.border = 'none';\n        });\n      } else {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n      }\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      alternativeLabel: true,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 20\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.backButton,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            children: activeStep === steps.length - 1 ? 'Submit' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormStepper, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormStepper\");","map":{"version":3,"sources":["/Users/Bemnet/BlogApp/frontend/src/components/homepage/FormStepper.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","BasicInfoForm","UserPassForm","useStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","stepIndex","FormStepper","classes","activeStep","setActiveStep","useState","steps","handleNext","userINputs","document","querySelectorAll","x","length","style","border","setTimeout","prevActiveStep","handleBack","handleReset","map","label","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport BasicInfoForm from './BasicInfoForm';\nimport UserPassForm from './UserPassForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Basic', 'Profile Info'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return (\n          <div>\n              <BasicInfoForm/>\n          </div>\n      )\n    case 1:\n      return (\n        <UserPassForm></UserPassForm>\n      )\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function FormStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n\n    var userINputs = document.querySelectorAll('input');\n    for (var x = 0; x < userINputs.length; x++) {\n      if (userINputs[x] === '') {\n        userINputs[x].style.border = 'red';\n\n\n        setTimeout(() => {\n          userINputs[x].style.border = 'none';\n\n        })\n      } else {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n\n      }\n    }\n    \n\n     \n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel><div style={{fontSize: 20}}>{label}</div></StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div style={{textAlign: 'center'}}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
[{"/Users/Bemnet/BlogApp/frontend/src/index.js":"1","/Users/Bemnet/BlogApp/frontend/src/reportWebVitals.js":"2","/Users/Bemnet/BlogApp/frontend/src/App.js":"3","/Users/Bemnet/BlogApp/frontend/src/pages/LoginGateway.js":"4","/Users/Bemnet/BlogApp/frontend/src/pages/Home.js":"5","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/HomeBackground.js":"6","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/Nav.js":"7","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/FormStepper.js":"8","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/BasicInfoForm.js":"9","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/UserPassForm.js":"10","/Users/Bemnet/BlogApp/frontend/src/components/home/NavBar.js":"11","/Users/Bemnet/BlogApp/frontend/src/components/home/CreatePost.js":"12","/Users/Bemnet/BlogApp/frontend/src/components/home/Greeting.js":"13","/Users/Bemnet/BlogApp/frontend/src/components/home/RecommendedPosts.js":"14"},{"size":500,"mtime":1618277470499,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1619057824683,"results":"17","hashOfConfig":"16"},{"size":449,"mtime":1619057517474,"results":"18","hashOfConfig":"16"},{"size":850,"mtime":1619058191048,"results":"19","hashOfConfig":"16"},{"size":1013,"mtime":1619229310635,"results":"20","hashOfConfig":"16"},{"size":6382,"mtime":1618944822222,"results":"21","hashOfConfig":"16"},{"size":1024,"mtime":1618944847132,"results":"22","hashOfConfig":"16"},{"size":3896,"mtime":1619120870166,"results":"23","hashOfConfig":"16"},{"size":1211,"mtime":1618964675899,"results":"24","hashOfConfig":"16"},{"size":1136,"mtime":1618965066781,"results":"25","hashOfConfig":"16"},{"size":1783,"mtime":1619202093407,"results":"26","hashOfConfig":"16"},{"size":1091,"mtime":1619197141623,"results":"27","hashOfConfig":"16"},{"size":613,"mtime":1619198929761,"results":"28","hashOfConfig":"16"},{"size":5382,"mtime":1619238186161,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"v6s1mv",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Bemnet/BlogApp/frontend/src/index.js",[],["63","64"],"/Users/Bemnet/BlogApp/frontend/src/reportWebVitals.js",[],"/Users/Bemnet/BlogApp/frontend/src/App.js",[],"/Users/Bemnet/BlogApp/frontend/src/pages/LoginGateway.js",["65"],"import React from 'react';\nimport styled from 'styled-components';\nimport HomeBackground from '../components/LoginGateway/HomeBackground';\n\n\nconst HomeWrapper = styled.section`\n/* scroll-behavior: smooth; */\n    scroll-behavior:  smooth;\n`;\n\nconst HomeBg = styled.article`\n    background-color: whitesmoke;\n    width: 100vw;\n    background: url(\"https://www.101computing.net/wp/wp-content/uploads/artillery-game-background.png\");\n    background-size: cover;\n    height: 100vh;\n    position: relative;\n\n    & h1 { \n        position: absolute;\n        color: #fff;\n        font-family:arial;\n        /* color: transparent; */\n        mix-blend-mode: multiply;\n    }\n    span { \n       \n    }\n\n`;\n\n\nexport default function LoginGateway() {\n    return (\n        <HomeWrapper>\n            <HomeBackground></HomeBackground>\n        </HomeWrapper>\n    )\n}\n\n","/Users/Bemnet/BlogApp/frontend/src/pages/Home.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/HomeBackground.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/Nav.js",["66","67"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst NavBar = styled.nav`\n    z-index: 50;\n    display: flex;\n    padding-top: 1rem;\n    padding-bottom: 0.5eem;\n    padding-left: 0.5rem;\n    width: 100vw;   \n    background-color: snow;\n    a {\n        color: black;\n        background: transparent;\n        border: none;\n        width: 6vw;\n        align-items: center;\n        align-self: center;\n        height: 5vh;\n        padding-right: 3em;\n        padding-left: 3em;\n        font-size: 20px;\n        font-weight: 900;\n        text-decoration: none;\n        width: max-content;\n     \n        cursor: pointer;\n    }\n\n    img {\n        z-index: 2;\n        width: 3vw;\n        padding: 0;\n        align-self: flex-start;\n        justify-self: center;\n    }\n`;\n\n\nexport default function Nav() {\n    return (\n        <NavBar>\n            <img src=\"testLogo.png\" alt=\"\"></img>\n\n            <a href='#aboutSection'>About</a>\n            <a>Login</a>\n            <a>Register</a>\n        </NavBar>\n    )\n}\n","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/FormStepper.js",["68"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport BasicInfoForm from './BasicInfoForm';\nimport UserPassForm from './UserPassForm';\nimport Home from '../../pages/Home';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Basic', 'Profile Info'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return (\n              <BasicInfoForm/>\n      )\n    case 1:\n      return (\n        <UserPassForm></UserPassForm>\n      )\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function FormStepper() {\n  const classes = useStyles();\n  const [formOneInfo, setFormOneObj] = React.useState({})\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = (e) => {\n    e.preventDefault();\n    let totalInputs = document.querySelectorAll('input');\n    let numUnhandledInputs = 0;\n    \n    for (var count = 0; count < totalInputs.length; count++) {\n      if (totalInputs[count].value === \"\") {\n        totalInputs[count].style.border = 'red solid 3px';\n        numUnhandledInputs++;\n        let textInput = totalInputs[count];\n        setTimeout(() => {\n          textInput.style.border = 'black solid 1px';\n          textInput.style.borderRadius = '3px';\n        }, 3000)\n      } \n    }\n\n    let formOneSubmission = {};\n\n    if (numUnhandledInputs === 0) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n      if (document.getElementById('form1') !== null) {\n        formOneSubmission = { \"firstName\": totalInputs[0].defaultValue, \"lastName\": totalInputs[1].defaultValue}\n        setFormOneObj(formOneSubmission);\n      } else {\n        let multiStepFormSubmit = {\n          ...formOneInfo,\n          username: totalInputs[0].value,\n          password: totalInputs[1].value,\n          confirmPassword: totalInputs[2].value\n        }\n\n        if (multiStepFormSubmit.password === multiStepFormSubmit.confirmPassword) {\n          try {\n             fetch('/createUser', {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              method: \"POST\",\n              body: JSON.stringify(multiStepFormSubmit),\n            }) \n            window.location.href = '/home'\n\n          } catch(e) {\n            console.log(e);\n          }\n        }\n      }\n    }\n\n  \n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n\n  return (\n    <div className={classes.root}>\n\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel><div style={{fontSize: 20}}>{label}</div></StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n         null\n        ) : (\n          <div>\n            <div>{getStepContent(activeStep)}</div>\n            <div style={{textAlign: 'center'}}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              \n              \n              <Button variant=\"contained\"  color=\"primary\" type='submit' onClick={handleNext}>\n                { activeStep !== steps.length - 1  ? 'Next' : 'Submit'}\n\n              </Button> \n            </div>\n          </div>)}\n      </div>\n\n    </div>\n  );\n}\n","/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/BasicInfoForm.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/LoginGateway/UserPassForm.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/home/NavBar.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/home/CreatePost.js",["69","70"],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n    \n\n\n\nconst PostWrapper = styled.div`\n    height: 15vh;\n    width: 100%;\n    \n    textarea {\n        width: 80%; \n        height: 80%;\n    }\n\n    \n\n    div {\n        display: flex;\n        margin-top: 1em;\n        width: 80%;\n        align-self: center;\n        justify-content: center;\n        column-gap: 1em;\n    }\n`;\n\n\nconst PostButton = styled.button`\n    width: 10vw;\n    height: 5vh;\n    border-radius: 3px;\n    justify-content: center;\n    align-items: center;\n    background-color: ${props => props.btnColor || 'green'};    \n    display: flex;\n    row-gap: 2em;\n    cursor: pointer;\n    outline: none;\n\n    &:focus {\n    }\n`;\n\nexport const CreatePost = () => {\n\n    return (\n        <PostWrapper>\n            <textarea placeholder='What would you like to write about...'></textarea>\n            <div>\n                <PostButton type='button' btnColor='snow'>Cancel</PostButton>\n                <PostButton type='button'>Post!</PostButton>\n\n            </div>\n        </PostWrapper>\n    )\n}","/Users/Bemnet/BlogApp/frontend/src/components/home/Greeting.js",[],"/Users/Bemnet/BlogApp/frontend/src/components/home/RecommendedPosts.js",["71","72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":7,"nodeType":"81","messageId":"82","endLine":11,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":46,"column":13,"nodeType":"85","endLine":46,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":47,"column":13,"nodeType":"85","endLine":47,"endColumn":16},{"ruleId":"79","severity":1,"message":"86","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":12},{"ruleId":"79","severity":1,"message":"87","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"88","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":35},{"ruleId":"79","severity":1,"message":"89","line":16,"column":9,"nodeType":"81","messageId":"82","endLine":16,"endColumn":10},{"ruleId":"90","severity":1,"message":"91","line":51,"column":17,"nodeType":"85","endLine":51,"endColumn":76},{"ruleId":"90","severity":1,"message":"91","line":69,"column":17,"nodeType":"85","endLine":69,"endColumn":76},{"ruleId":"90","severity":1,"message":"91","line":87,"column":17,"nodeType":"85","endLine":87,"endColumn":76},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'HomeBg' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Home' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'u' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]